module Mineswepper (
input CLK, //clock
input [5:0] inp,
output reg [7:0] mled_r, mled_g, mled_b, // matrix led
output reg [3:0] mled_COM, // matrix led COM
output reg [6:0] seg, // seg
output reg [3:0] seg_COM // seg COM
);

parameter logic [9:0][7:0][7:0] map_data  = 
'{
  { 
  8'b01111111,
  8'b11111111,
  8'b11111111,
  8'b11111111,
  8'b11111111,
  8'b11111111,
  8'b11111111,
  8'b11111111
  },
  { 
  8'b10111111,
  8'b11111111,
  8'b11111111,
  8'b11111111,
  8'b11111111,
  8'b11111111,
  8'b11111111,
  8'b11111111
  }, 
  { 
  8'b11011111,
  8'b11111111,
  8'b11111111,
  8'b11111111,
  8'b11111111,
  8'b11111111,
  8'b11111111,
  8'b11111111
  }, 
  { 
  8'b11101111,
  8'b11111111,
  8'b11111111,
  8'b11111111,
  8'b11111111,
  8'b11111111,
  8'b11111111,
  8'b11111111
  }, 
  { 
  8'b11110111,
  8'b11111111,
  8'b11111111,
  8'b11111111,
  8'b11111111,
  8'b11111111,
  8'b11111111,
  8'b11111111
  }, 
  { 
  8'b11111011,
  8'b11111111,
  8'b11111111,
  8'b11111111,
  8'b11111111,
  8'b11111111,
  8'b11111111,
  8'b11111111
  }, 
  { 
  8'b11111101,
  8'b11111111,
  8'b11111111,
  8'b11111111,
  8'b11111111,
  8'b11111111,
  8'b11111111,
  8'b11111111
  }, 
  { 
  8'b11111110,
  8'b11111111,
  8'b11111111,
  8'b11111111,
  8'b11111111,
  8'b11111111,
  8'b11111111,
  8'b11111111
  }, 
  { 
  8'b11111111,
  8'b01111111,
  8'b11111111,
  8'b11111111,
  8'b11111111,
  8'b11111111,
  8'b11111111,
  8'b11111111
  }, 
  { 
  8'b00000000,
  8'b00000000,
  8'b00000000,
  8'b00000000,
  8'b00000000,
  8'b00000000,
  8'b00000000,
  8'b00000000
  }
};

// wire變量初始化
  reg [3:0] levelNum;
  reg [6:0] level_seg;
  reg [6:0] mineNum_seg;
  bit strFlag; // 遊戲開始 flag
  bit [2:0] cnt; // mled 繪製目標行
  integer player_x=3, player_y=4; // 玩家位置, 0 代表左上，範圍={0, 7}
  reg player_flag =0; // player 閃爍 flag
  bit lose_flag=0; // 1 代表輸
  bit win_flag=0; // 1 代表贏
  bit win_flag2=0; // 1 代表贏
  // 地雷, 0=地雷, 1=沒壓過, 2=壓過
  reg [2:0] mine_map [9:0][9:0]; // 儲存地雷的地圖, 有防觸發牆(1~8是有效數據)
  // 紅, 0=紅
  // 綠, 0=綠
  // 藍, 0=藍
  reg [7:0][7:0] r_map, g_map, b_map;
  reg [3:0] mineNum_map [9:0][9:0]; // 儲存地雷數量的地圖, 有防觸發牆(1~8是有效數據)
  integer i, j, k, l;  // 用於循環的索引變量
// 寄存器數據初始化


initial begin
  strFlag=0;
